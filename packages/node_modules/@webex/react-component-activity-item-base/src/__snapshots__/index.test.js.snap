// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActivityItemBase component renders properly 1`] = `
<div
  className="activity-item activityItem"
>
  <div
    className="webex-avatar-wrapper webex-activity-item-avatar-wrapper avatarWrapper"
  >
    <Connect(PresenceAvatar)
      avatarId="user-abc-123"
      isSelfAvatar={false}
      name="Test User"
      size={36}
    />
  </div>
  <div
    className="webex-content-container contentContainer"
  >
    <div
      className="webex-meta meta"
    >
      <div
        className="webex-display-name displayName"
        title="Test User"
      >
        Test User
      </div>
      <div
        className="webex-published published"
      >
        2016-09-20T19:52:57.186Z
         
      </div>
    </div>
    <div
      className="webex-activity-content content"
    >
      <div>
        Test Content
      </div>
    </div>
  </div>
  <div
    className="webex-activity-post-actions activityPostActions"
  >
    <div
      className="activity-post-action activityPostAction"
    >
      <Icon
        append={false}
        aria-pressed={false}
        ariaLabel="Flag for follow-up"
        buttonClassName=""
        buttonProps={null}
        className=""
        color="black-100"
        description=""
        name="flag_16"
        onClick={[Function]}
        prepend={false}
        size={null}
        sizeOverride={false}
        style={null}
        title=""
        type=""
      />
    </div>
    <div
      className="activity-post-action activityPostAction"
    >
      <div
        className="webex-action-spacer actionSpacer"
      />
    </div>
  </div>
</div>
`;

exports[`ActivityItemBase component renders properly when additional 1`] = `
<div
  className="activity-item activityItem activity-item-additional additional"
>
  <div
    className="webex-avatar-wrapper webex-activity-item-avatar-wrapper avatarWrapper"
  >
    <Connect(PresenceAvatar)
      avatarId="user-abc-123"
      isSelfAvatar={false}
      name="Test User"
      size={36}
    />
  </div>
  <div
    className="webex-content-container contentContainer"
  >
    <div
      className="webex-meta meta"
    >
      <div
        className="webex-display-name displayName"
        title="Test User"
      >
        Test User
      </div>
      <div
        className="webex-published published"
      >
        2016-09-20T19:52:57.186Z
         
      </div>
    </div>
    <div
      className="webex-activity-content content"
    >
      <div>
        Test Content
      </div>
    </div>
  </div>
  <div
    className="webex-activity-post-actions activityPostActions"
  >
    <div
      className="activity-post-action activityPostAction"
    >
      <Icon
        append={false}
        aria-pressed={false}
        ariaLabel="Flag for follow-up"
        buttonClassName=""
        buttonProps={null}
        className=""
        color="black-100"
        description=""
        name="flag_16"
        onClick={[Function]}
        prepend={false}
        size={null}
        sizeOverride={false}
        style={null}
        title=""
        type=""
      />
    </div>
    <div
      className="activity-post-action activityPostAction"
    >
      <div
        className="webex-action-spacer actionSpacer"
      />
    </div>
  </div>
</div>
`;

exports[`ActivityItemBase component renders properly when flagged 1`] = `
<div
  className="activity-item activityItem"
>
  <div
    className="webex-avatar-wrapper webex-activity-item-avatar-wrapper avatarWrapper"
  >
    <Connect(PresenceAvatar)
      avatarId="user-abc-123"
      isSelfAvatar={false}
      name="Test User"
      size={36}
    />
  </div>
  <div
    className="webex-content-container contentContainer"
  >
    <div
      className="webex-meta meta"
    >
      <div
        className="webex-display-name displayName"
        title="Test User"
      >
        Test User
      </div>
      <div
        className="webex-published published"
      >
        2016-09-20T19:52:57.186Z
         
      </div>
    </div>
    <div
      className="webex-activity-content content"
    >
      <div>
        Test Content
      </div>
    </div>
  </div>
  <div
    className="webex-activity-post-actions activityPostActions"
  >
    <div
      className="activity-post-action activityPostAction isHighlighted isHighlighted"
    >
      <Icon
        append={false}
        aria-pressed={true}
        ariaLabel="Flag for follow-up"
        buttonClassName=""
        buttonProps={null}
        className=""
        color="black-100"
        description=""
        name="flag-active_16"
        onClick={[Function]}
        prepend={false}
        size={null}
        sizeOverride={false}
        style={null}
        title=""
        type=""
      />
    </div>
    <div
      className="activity-post-action activityPostAction"
    >
      <div
        className="webex-action-spacer actionSpacer"
      />
    </div>
  </div>
</div>
`;

exports[`ActivityItemBase component renders properly when flagged pending 1`] = `
<div
  className="activity-item activityItem"
>
  <div
    className="webex-avatar-wrapper webex-activity-item-avatar-wrapper avatarWrapper"
  >
    <Connect(PresenceAvatar)
      avatarId="user-abc-123"
      isSelfAvatar={false}
      name="Test User"
      size={36}
    />
  </div>
  <div
    className="webex-content-container contentContainer"
  >
    <div
      className="webex-meta meta"
    >
      <div
        className="webex-display-name displayName"
        title="Test User"
      >
        Test User
      </div>
      <div
        className="webex-published published"
      >
        2016-09-20T19:52:57.186Z
         
      </div>
    </div>
    <div
      className="webex-activity-content content"
    >
      <div>
        Test Content
      </div>
    </div>
  </div>
  <div
    className="webex-activity-post-actions activityPostActions"
  >
    <div
      className="activity-post-action activityPostAction isHighlighted isHighlighted flagActionPending"
    >
      <Icon
        append={false}
        aria-pressed={true}
        ariaLabel="Flag for follow-up"
        buttonClassName=""
        buttonProps={null}
        className=""
        color="black-100"
        description=""
        name="flag-active_16"
        onClick={[Function]}
        prepend={false}
        size={null}
        sizeOverride={false}
        style={null}
        title=""
        type=""
      />
    </div>
    <div
      className="activity-post-action activityPostAction"
    >
      <div
        className="webex-action-spacer actionSpacer"
      />
    </div>
  </div>
</div>
`;

exports[`ActivityItemBase component renders properly when message is edited 1`] = `
<div
  className="activity-item activityItem"
>
  <div
    className="webex-avatar-wrapper webex-activity-item-avatar-wrapper avatarWrapper"
  >
    <Connect(PresenceAvatar)
      avatarId="user-abc-123"
      isSelfAvatar={false}
      name="Test User"
      size={36}
    />
  </div>
  <div
    className="webex-content-container contentContainer"
  >
    <div
      className="webex-meta meta"
    >
      <div
        className="webex-display-name displayName"
        title="Test User"
      >
        Test User
      </div>
      <div
        className="webex-published published"
      >
        2016-09-20T19:52:57.186Z
         
        <UNDEFINED
          defaultMessage="Edited"
          id="ciscospark.systemMessage.message.youEdited"
        />
      </div>
    </div>
    <div
      className="webex-activity-content content"
    >
      <div>
        Test Content
      </div>
    </div>
  </div>
  <div
    className="webex-activity-post-actions activityPostActions"
  >
    <div
      className="activity-post-action activityPostAction"
    >
      <Icon
        append={false}
        aria-pressed={false}
        ariaLabel="Flag for follow-up"
        buttonClassName=""
        buttonProps={null}
        className=""
        color="black-100"
        description=""
        name="flag_16"
        onClick={[Function]}
        prepend={false}
        size={null}
        sizeOverride={false}
        style={null}
        title=""
        type=""
      />
    </div>
    <div
      className="activity-post-action activityPostAction"
    >
      <div
        className="webex-action-spacer actionSpacer"
      />
    </div>
  </div>
</div>
`;

exports[`ActivityItemBase component renders properly when message is not edited 1`] = `
<div
  className="activity-item activityItem"
>
  <div
    className="webex-avatar-wrapper webex-activity-item-avatar-wrapper avatarWrapper"
  >
    <Connect(PresenceAvatar)
      avatarId=""
      isSelfAvatar={false}
      name=""
      size={36}
    />
  </div>
  <div
    className="webex-content-container contentContainer"
  >
    <div
      className="webex-meta meta"
    >
      <div
        className="webex-display-name displayName"
        title=""
      >
        
      </div>
      <div
        className="webex-published published"
      >
        
         
      </div>
    </div>
    <div
      className="webex-activity-content content"
    >
      <div>
        Test Content
      </div>
    </div>
  </div>
  <div
    className="webex-activity-post-actions activityPostActions"
  >
    <div
      className="activity-post-action activityPostAction"
    >
      <Icon
        append={false}
        aria-pressed={false}
        ariaLabel="Flag for follow-up"
        buttonClassName=""
        buttonProps={null}
        className=""
        color="black-100"
        description=""
        name="flag_16"
        onClick={[Function]}
        prepend={false}
        size={null}
        sizeOverride={false}
        style={null}
        title=""
        type=""
      />
    </div>
    <div
      className="activity-post-action activityPostAction"
    >
      <div
        className="webex-action-spacer actionSpacer"
      />
    </div>
  </div>
</div>
`;

exports[`ActivityItemBase component renders properly when pending 1`] = `
<div
  className="activity-item activityItem activity-item-pending pending"
>
  <div
    className="webex-avatar-wrapper webex-activity-item-avatar-wrapper avatarWrapper"
  >
    <Connect(PresenceAvatar)
      avatarId="user-abc-123"
      isSelfAvatar={false}
      name="Test User"
      size={36}
    />
  </div>
  <div
    className="webex-content-container contentContainer"
  >
    <div
      className="webex-meta meta"
    >
      <div
        className="webex-display-name displayName"
        title="Test User"
      >
        Test User
      </div>
      <div
        className="webex-published published"
      >
        2016-09-20T19:52:57.186Z
         
      </div>
    </div>
    <div
      className="webex-activity-content content"
    >
      <div>
        Test Content
      </div>
    </div>
  </div>
  <div
    className="webex-activity-post-actions activityPostActions"
  />
</div>
`;

exports[`ActivityItemBase component renders properly when self 1`] = `
<div
  className="activity-item activityItem"
>
  <div
    className="webex-avatar-wrapper webex-activity-item-avatar-wrapper avatarWrapper selfAvatar"
  >
    <Connect(PresenceAvatar)
      avatarId="user-abc-123"
      isSelfAvatar={true}
      name="Test User"
      size={36}
    />
  </div>
  <div
    className="webex-content-container contentContainer"
  >
    <div
      className="webex-meta meta"
    >
      <div
        className="webex-display-name displayName"
        title="Test User"
      >
        You
      </div>
      <div
        className="webex-published published"
      >
        2016-09-20T19:52:57.186Z
         
      </div>
    </div>
    <div
      className="webex-activity-content content"
    >
      <div>
        Test Content
      </div>
    </div>
  </div>
  <div
    className="webex-activity-post-actions activityPostActions"
  >
    <div
      className="activity-post-action activityPostAction"
    >
      <Icon
        append={false}
        aria-pressed={false}
        ariaLabel="Flag for follow-up"
        buttonClassName=""
        buttonProps={null}
        className=""
        color="black-100"
        description=""
        name="flag_16"
        onClick={[Function]}
        prepend={false}
        size={null}
        sizeOverride={false}
        style={null}
        title=""
        type=""
      />
    </div>
    <div
      className="activity-post-action activityPostAction"
    >
      <Icon
        append={false}
        ariaLabel="Delete message"
        buttonClassName=""
        buttonProps={null}
        className=""
        color="black-100"
        description=""
        name="clear_16"
        onClick={[Function]}
        prepend={false}
        size={null}
        sizeOverride={false}
        style={null}
        title=""
        type=""
      />
    </div>
  </div>
</div>
`;

exports[`ActivityItemBase component renders properly with error 1`] = `
<div
  className="activity-item activityItem"
>
  <div
    className="webex-avatar-wrapper webex-activity-item-avatar-wrapper avatarWrapper"
  >
    <Connect(PresenceAvatar)
      avatarId="user-abc-123"
      isSelfAvatar={false}
      name="Test User"
      size={36}
    />
  </div>
  <div
    className="webex-content-container contentContainer"
  >
    <div
      className="webex-meta meta"
    >
      <div
        className="webex-display-name displayName"
        title="Test User"
      >
        Test User
      </div>
      <div
        className="webex-published published"
      >
        2016-09-20T19:52:57.186Z
         
      </div>
    </div>
    <div
      className="webex-activity-content content"
    >
      <div>
        Test Content
      </div>
    </div>
    <div
      className="webex-activity-error error"
      role="presentation"
    >
      <button
        onClick={[Function]}
      >
        Unable to post. Click to retry
      </button>
    </div>
  </div>
  <div
    className="webex-activity-post-actions activityPostActions"
  >
    <div
      className="activity-post-action activityPostAction"
    >
      <Icon
        append={false}
        aria-pressed={false}
        ariaLabel="Flag for follow-up"
        buttonClassName=""
        buttonProps={null}
        className=""
        color="black-100"
        description=""
        name="flag_16"
        onClick={[Function]}
        prepend={false}
        size={null}
        sizeOverride={false}
        style={null}
        title=""
        type=""
      />
    </div>
    <div
      className="activity-post-action activityPostAction"
    >
      <div
        className="webex-action-spacer actionSpacer"
      />
    </div>
  </div>
</div>
`;
